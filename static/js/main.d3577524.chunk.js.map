{"version":3,"sources":["components/CryptoComponent.js","utils/WebSocketConnectionEmmiter.js","models/Order.js","models/OrderBook.js","models/OrderBookViewModel.js","App.js","serviceWorker.js","index.js"],"names":["CryptoComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentlyExpandedAskIndex","currentlyExpandedBidIndex","_this$props","orderBookViewModel","classes","react_default","a","createElement","className","root","Grid_default","container","spacing","item","xs","Paper_default","paper","midpointPrice","createTopLevelAskRows","descendingAskBuckets","createTopLevelBidRows","descendingBidBuckets","askBuckets","_this2","askRows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","_ref","value","index","_ref2","slicedToArray","askBucket","push","onClick","askRowClicked","style","color","price","size","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","orders","Symbol","iterator","next","done","order","err","return","_iterator","entries","bidBuckets","_this3","bidRows","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop2","_ref3","_ref4","bidBucket","bidRowClicked","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iterator3","bucketIndex","setState","React","Component","withStyles","theme","padding","unit","flexGrow","textAlign","palette","text","secondary","WebSocketConnectionEmmiter","webSocket","WebSocket","addEventListener","subscriptionMessage","JSON","stringify","type","product_ids","channels","console","log","send","message","coinbaseData","parse","data","emit","bind","assertThisInitialized","EventEmitter","Order","priceString","sizeString","parseFloat","_key","shortid","generate","insertSorted","orderArray","orderToInsert","splice","deleteOrderOfPrice","_ref5","findIndex","OrderBook","descendingBids","descendingAsks","snapshot","_ref6","bids","forEach","bidTuple","_bidTuple","asks","askTuple","_askTuple","_ref7","l2update","changes","changeTuple","_changeTuple","side","orderBucketSize","generateOrderBuckets","buckets","bucketCount","Math","trunc","length","i","bucketContents","slice","_","meanBy","sumBy","OrderBookViewModel","orderBook","mean","App","orderBookSubscriber","CoinbaseOrderBookSubscriber","on","provideSnapshot","provideL2Update","components_CryptoComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8OAgBMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,0BAA2B,KAC3BC,0BAA2B,MAJhBT,wEAQV,IAAAU,EACmCP,KAAKJ,MAArCY,EADHD,EACGC,mBAAoBC,EADvBF,EACuBE,QAC5B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQK,MACpBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAMK,WAAS,EAACC,QAAS,IACrBP,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAMO,MAAI,EAACC,GAAI,IACXT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAOE,UAAWJ,EAAQY,OAA1B,YAEJX,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAMO,MAAI,EAACC,GAAI,IACXT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAOE,UAAWJ,EAAQY,OAA1B,qBAAoDb,EAAmBc,gBAE3EZ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAMO,MAAI,EAACC,GAAI,GACXT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAOE,UAAWJ,EAAQY,OACtBX,EAAAC,EAAAC,cAAA,SAAOC,UAAW,OACdH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,uBAAkBF,EAAAC,EAAAC,cAAA,oBAG1BF,EAAAC,EAAAC,cAAA,aACKZ,KAAKuB,sBAAsBf,EAAmBgB,0BAK/Dd,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAMO,MAAI,EAACC,GAAI,GACXT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAOE,UAAWJ,EAAQY,OACtBX,EAAAC,EAAAC,cAAA,SAAOC,UAAW,OACdH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,uBAAkBF,EAAAC,EAAAC,cAAA,oBAG1BF,EAAAC,EAAAC,cAAA,aACKZ,KAAKyB,sBAAsBjB,EAAmBkB,0EAUzDC,GAAY,IAAAC,EAAA5B,KACxB6B,EAAU,GADcC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAE9B,IAF8B,IAE9BC,EAF8BC,EAAA,eAAAC,EAAAF,EAAAG,MAEpBC,GAFoBC,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAsC,EAAA,OAEbK,EAFaF,EAAA,GAI1B,GADAV,EAAQa,KAAKhC,EAAAC,EAAAC,cAAA,MAAI+B,QAAS,kBAAMf,EAAKgB,cAAcN,KAAQ5B,EAAAC,EAAAC,cAAA,MAAIiC,MAAO,CAAEC,MAAO,QAApB,IAA+BL,EAAUM,OAAWrC,EAAAC,EAAAC,cAAA,UAAK6B,EAAUO,KAAf,aAC3GpB,EAAKxB,MAAMC,4BAA8BiC,EAAO,KAAAW,GAAA,EAAAC,GAAA,EAAAC,OAAAlB,EAAA,IAChD,QAAAmB,EAAAC,EAAkBZ,EAAUa,OAA5BC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EAAoC,KAA3BU,EAA2BP,EAAAf,MAChCR,EAAQa,KAAKhC,EAAAC,EAAAC,cAAA,MAAI+B,QAAS,kBAAMf,EAAKgB,cAAcN,KAAQ5B,EAAAC,EAAAC,cAAA,MAAIiC,MAAO,CAAEC,MAAO,QAApB,IAA+Ba,EAAMZ,OAAWrC,EAAAC,EAAAC,cAAA,UAAK+C,EAAMX,SAF1E,MAAAY,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,MAFxDW,EAA+BnC,EAAWoC,UAA1CR,OAAAC,cAAA1B,GAAAI,EAAA4B,EAAAL,QAAAC,MAAA5B,GAAA,EAAqD,KAAAS,EAAAJ,KAFvB,MAAAyB,GAAA7B,GAAA,EAAAC,EAAA4B,EAAA,YAAA9B,GAAA,MAAAgC,EAAAD,QAAAC,EAAAD,SAAA,WAAA9B,EAAA,MAAAC,GAU9B,OAAOH,gDAGWmC,GAAY,IAAAC,EAAAjE,KACxBkE,EAAU,GADcC,GAAA,EAAAC,GAAA,EAAAC,OAAApC,EAAA,IAE9B,IAF8B,IAE9BqC,EAF8BC,EAAA,eAAAC,EAAAF,EAAAjC,MAEpBC,GAFoBmC,EAAA3E,OAAA0C,EAAA,EAAA1C,CAAA0E,EAAA,OAEbE,EAFaD,EAAA,GAI1B,GADAP,EAAQxB,KAAKhC,EAAAC,EAAAC,cAAA,MAAI+B,QAAS,kBAAMsB,EAAKU,cAAcrC,KAAQ5B,EAAAC,EAAAC,cAAA,MAAIiC,MAAO,CAAEC,MAAO,UAApB,IAAiC4B,EAAU3B,OAAWrC,EAAAC,EAAAC,cAAA,UAAK8D,EAAU1B,KAAf,aAC7GiB,EAAK7D,MAAME,4BAA8BgC,EAAO,KAAAsC,GAAA,EAAAC,GAAA,EAAAC,OAAA7C,EAAA,IAChD,QAAA8C,EAAAC,EAAkBN,EAAUpB,OAA5BC,OAAAC,cAAAoB,GAAAG,EAAAC,EAAAvB,QAAAC,MAAAkB,GAAA,EAAoC,KAA3BjB,EAA2BoB,EAAA1C,MAChC6B,EAAQxB,KAAKhC,EAAAC,EAAAC,cAAA,MAAI+B,QAAS,kBAAMsB,EAAKU,cAAcrC,KAAQ5B,EAAAC,EAAAC,cAAA,MAAIiC,MAAO,CAAEC,MAAO,UAApB,IAAiCa,EAAMZ,OAAWrC,EAAAC,EAAAC,cAAA,UAAK+C,EAAMX,SAF5E,MAAAY,GAAAiB,GAAA,EAAAC,EAAAlB,EAAA,YAAAgB,GAAA,MAAAI,EAAAnB,QAAAmB,EAAAnB,SAAA,WAAAgB,EAAA,MAAAC,MAFxDG,EAA+BjB,EAAWD,UAA1CR,OAAAC,cAAAW,GAAAG,EAAAW,EAAAxB,QAAAC,MAAAS,GAAA,EAAqD,KAAAM,EAAAF,KAFvB,MAAAX,GAAAQ,GAAA,EAAAC,EAAAT,EAAA,YAAAO,GAAA,MAAAc,EAAApB,QAAAoB,EAAApB,SAAA,WAAAO,EAAA,MAAAC,GAU9B,OAAOH,wCAGGgB,GACNlF,KAAKI,MAAMC,4BAA8B6E,EAK7ClF,KAAKmF,SAAS,CAAE9E,0BAA2B6E,IAJvClF,KAAKmF,SAAS,CAAE9E,0BAA2B,6CAOrC6E,GACNlF,KAAKI,MAAME,4BAA8B4E,EAK7ClF,KAAKmF,SAAS,CAAE7E,0BAA2B4E,IAJvClF,KAAKmF,SAAS,CAAE7E,0BAA2B,cA1FzB8E,IAAMC,WAiGrBC,uBA5GA,SAAAC,GAAK,MAAK,CACrBzE,KAAM,CACF0E,QAA8B,EAArBD,EAAMtE,QAAQwE,KACvBC,SAAU,GAEdrE,MAAO,CACHmE,QAA8B,EAArBD,EAAMtE,QAAQwE,KACvBE,UAAW,SACX7C,MAAOyC,EAAMK,QAAQC,KAAKC,aAoGnBR,CAAmB3F,uBC1FboG,cACjB,SAAAA,IAAc,IAAAlG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,IACVlG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiG,GAAA5F,KAAAH,QACKgG,UAAY,IAAIC,UAAU,kCAC/BpG,EAAKmG,UAAUE,iBAAiB,OAAQ,WACpC,IAAMC,EAAsBC,KAAKC,UAAU,CACvCC,KAAM,YACNC,YAAa,CACT,WAEJC,SAAU,CACN,YAGRC,QAAQC,IAAR,0BACA7G,EAAKmG,UAAUW,KAAKR,KAExBtG,EAAKmG,UAAUE,iBAAiB,QAAS,WACrCO,QAAQC,IAAR,eAEJ7G,EAAKmG,UAAUE,iBAAiB,QAAS,WACrCO,QAAQC,IAAR,eAIJ7G,EAAKmG,UAAUE,iBAAiB,UA9CxC,SAAgCU,GAC5B,IAAMC,EAAeT,KAAKU,MAAMF,EAAQG,MACxC,OAAQF,EAAY,MAChB,IAAK,gBAEL,IAAK,QACD,MACJ,IAAK,WACD7G,KAAKgH,KAAK,WAAYH,GACtB,MACJ,IAAK,WACD7G,KAAKgH,KAAK,WAAYH,KAmCwCI,KAAvBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAD,MAxBjCA,oCADsCsH,oBCrBnCC,EACnB,SAAAA,EAAAhF,GAAyC,IAA3BiF,EAA2BjF,EAA3BiF,YAAaC,EAAclF,EAAdkF,WAAcxH,OAAAC,EAAA,EAAAD,CAAAE,KAAAoH,GACvCpH,KAAKqH,YAAcA,EACnBrH,KAAKsH,WAAaA,EAClBtH,KAAK+C,MAAQwE,WAAWF,GACxBrH,KAAKgD,KAAOuE,WAAWD,GACvBtH,KAAKwH,KAAOC,IAAQC,YCNxB,SAASC,EAATvF,GAAqD,IAA7BwF,EAA6BxF,EAA7BwF,WAAYC,EAAiBzF,EAAjByF,cAAiB/F,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACnD,QAAAC,EAAA4B,EAA0B8D,EAAW7D,UAArCR,OAAAC,cAAA1B,GAAAI,EAAA4B,EAAAL,QAAAC,MAAA5B,GAAA,EAAgD,KAAA2C,EAAAvC,EAAAG,MAAAmC,EAAA1E,OAAA0C,EAAA,EAAA1C,CAAA2E,EAAA,GAAvCnC,EAAuCkC,EAAA,GAAhCb,EAAgCa,EAAA,GAC9C,GAAIb,GACDkE,EAAc9E,MAAQY,EAAMZ,MAE7B,YADA6E,EAAWE,OAAOxF,EAAO,EAAGuF,IAJmB,MAAAjE,GAAA7B,GAAA,EAAAC,EAAA4B,EAAA,YAAA9B,GAAA,MAAAgC,EAAAD,QAAAC,EAAAD,SAAA,WAAA9B,EAAA,MAAAC,GAQnD4F,EAAWlF,KAAKmF,GAGlB,SAASE,EAATC,GAAqD,IAAvB1E,EAAuB0E,EAAvB1E,OAAQ+D,EAAeW,EAAfX,YAC9B/E,EAAQgB,EAAO2E,UAAU,SAACtE,GAAD,OAAWA,GAASA,EAAM0D,cAAgBA,KAC3D,IAAX/E,GACHgB,EAAOwE,OAAOxF,EAAO,OAGF4F,aACnB,SAAAA,IAAepI,OAAAC,EAAA,EAAAD,CAAAE,KAAAkI,GACblI,KAAKmI,eAAiB,GACtBnI,KAAKoI,eAAiB,kEAGM,IAAAvI,EAAAG,KAAZqI,EAAYC,EAAZD,SAChBrI,KAAKmI,eAAiB,GACtBnI,KAAKoI,eAAiB,GACtBC,EAASE,KAAKC,QAAQ,SAACC,GAAa,IAAAC,EAAA5I,OAAA0C,EAAA,EAAA1C,CACA2I,EADA,GAC3BpB,EAD2BqB,EAAA,GACdpB,EADcoB,EAAA,GAElCf,EAAa,CAAEC,WAAY/H,EAAKsI,eAAgBN,cAAe,IAAIT,EAAM,CAAEC,cAAaC,mBAE1Fe,EAASM,KAAKH,QAAQ,SAACI,GAAa,IAAAC,EAAA/I,OAAA0C,EAAA,EAAA1C,CACA8I,EADA,GAC3BvB,EAD2BwB,EAAA,GACdvB,EADcuB,EAAA,GAElClB,EAAa,CAAEC,WAAY/H,EAAKuI,eAAgBP,cAAe,IAAIT,EAAM,CAAEC,cAAaC,8DAI9D,IAAA1F,EAAA5B,KAAA8I,EAAZC,SACPC,QAAQR,QAAQ,SAACS,GAAgB,IAAAC,EAAApJ,OAAA0C,EAAA,EAAA1C,CACAmJ,EADA,GACjCE,EADiCD,EAAA,GAC3B7B,EAD2B6B,EAAA,GACd5B,EADc4B,EAAA,GAExC,OAAOC,GACL,IAAK,MACH,GAAkB,MAAf7B,EAAoB,CACrBS,EAAmB,CAAEzE,OAAQ1B,EAAKuG,eAAgBd,gBAClD,MAEFM,EAAa,CAAEC,WAAYhG,EAAKuG,eAAgBN,cAAe,IAAIT,EAAM,CAAEC,cAAaC,iBACxF,MACF,IAAK,OACH,GAAkB,MAAfA,EAAoB,CACrBS,EAAmB,CAAEzE,OAAQ1B,EAAKwG,eAAgBf,gBAClD,MAEFM,EAAa,CAAEC,WAAYhG,EAAKwG,eAAgBP,cAAe,IAAIT,EAAM,CAAEC,cAAaC,8CCpD5F8B,EAAkB,IAMxB,SAASC,EAATjH,GAGE,IAHwC,IAAVkB,EAAUlB,EAAVkB,OACxBgG,EAAU,GACVC,EAAcC,KAAKC,MAAMnG,EAAOoG,OAASN,GAAmB,EAC1DO,EAAI,EAAGA,EAAIJ,IAAeI,EAAG,CACnC,IAAMC,EAAiBtG,EAAOuG,MAAMF,EAAIP,GAAkBO,EAAI,GAAKP,GAC7DrG,EAAQ+G,IAAEC,OAAOH,EAAgB,SAAAjG,GAAK,OAAIA,EAAMZ,QAChDC,EAAO8G,IAAEE,MAAMJ,EAAgB,SAAAjG,GAAK,OAAIA,EAAMX,OACpDsG,EAAQ5G,KAAK,CACXK,QACAC,OACAM,OAAQsG,EACRpC,KAAMC,IAAQC,aAGlB,OAAO4B,MAMYW,EACnB,SAAAA,EAAA1H,GAA2B,IAAb2H,EAAa3H,EAAb2H,UAAapK,OAAAC,EAAA,EAAAD,CAAAE,KAAAiK,GACzBjK,KAAKwB,qBAAuB6H,EAAqB,CAAE/F,OAAQ4G,EAAU9B,iBACrEpI,KAAK0B,qBAAuB2H,EAAqB,CAAE/F,OAAQ4G,EAAU/B,iBAClE+B,EAAU9B,eAAesB,OAAS,GAAKQ,EAAU/B,eAAeuB,OAAS,EAC1E1J,KAAKsB,cAAgBwI,IAAEK,KAAK,CAACD,EAAU9B,eAAe8B,EAAU9B,eAAesB,OAAS,GAAG3G,MAAOmH,EAAU/B,eAAe,GAAGpF,QAE9H/C,KAAKsB,cAAgB,GCCZ8I,cA5Bb,SAAAA,EAAYxK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoK,IACjBvK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsK,GAAAjK,KAAAH,KAAMJ,KAEDQ,MAAQ,CACX8J,UAAW,IAAIhC,EACfmC,oBAAqB,IAAIC,GAG3BzK,EAAKO,MAAMiK,oBAAoBE,GAAG,WAAY,SAAClC,GAC7CxI,EAAKO,MAAM8J,UAAUM,gBAAgB,CAAEnC,aACvCxI,EAAKsF,SAAS,CAAE+E,UAAWrK,EAAKO,MAAM8J,cAExCrK,EAAKO,MAAMiK,oBAAoBE,GAAG,WAAY,SAACxB,GAC7ClJ,EAAKO,MAAM8J,UAAUO,gBAAgB,CAAE1B,aACvClJ,EAAKsF,SAAS,CAAE+E,UAAWrK,EAAKO,MAAM8J,cAdvBrK,wEAmBjB,IAAMW,EAAqB,IAAIyJ,EAAmB,CAAEC,UAAWlK,KAAKI,MAAM8J,YAC1E,OACExJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAC8J,EAAD,CAAiBlK,mBAAoBA,YAvB3B6E,aCKEsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvK,EAAAC,EAAAC,cAACsK,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d3577524.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n    root: {\n        padding: theme.spacing.unit * 2,\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n});\nclass CryptoComponent extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentlyExpandedAskIndex: null,\n            currentlyExpandedBidIndex: null\n        }\n    }\n\n    render() {\n        const { orderBookViewModel, classes } = this.props\n        return (\n            <div className={classes.root}>\n                <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>BTC/USD</Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>Mid Point Price: ${orderBookViewModel.midpointPrice}</Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Paper className={classes.paper}>\n                            <table className={'box'}>\n                                <thead>\n                                    <tr>\n                                        <td>Ask Price</td><td>Size</td>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.createTopLevelAskRows(orderBookViewModel.descendingAskBuckets)}\n                                </tbody>\n                            </table>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Paper className={classes.paper}>\n                            <table className={'box'}>\n                                <thead>\n                                    <tr>\n                                        <td>Bid Price</td><td>Size</td>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.createTopLevelBidRows(orderBookViewModel.descendingBidBuckets)}\n                                </tbody>\n                            </table>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n\n    createTopLevelAskRows(askBuckets) {\n        const askRows = []\n        for (let [index, askBucket] of askBuckets.entries()) {\n            askRows.push(<tr onClick={() => this.askRowClicked(index)}><td style={{ color: 'red' }}>${askBucket.price}</td><td>{askBucket.size} ▾</td></tr>)\n            if (this.state.currentlyExpandedAskIndex === index) {\n                for (let order of askBucket.orders) {\n                    askRows.push(<tr onClick={() => this.askRowClicked(index)}><td style={{ color: 'red' }}>${order.price}</td><td>{order.size}</td></tr>)\n                }\n            }\n        }\n        return askRows\n    }\n\n    createTopLevelBidRows(bidBuckets) {\n        const bidRows = []\n        for (let [index, bidBucket] of bidBuckets.entries()) {\n            bidRows.push(<tr onClick={() => this.bidRowClicked(index)}><td style={{ color: 'green' }}>${bidBucket.price}</td><td>{bidBucket.size} ▾</td></tr>)\n            if (this.state.currentlyExpandedBidIndex === index) {\n                for (let order of bidBucket.orders) {\n                    bidRows.push(<tr onClick={() => this.bidRowClicked(index)}><td style={{ color: 'green' }}>${order.price}</td><td>{order.size}</td></tr>)\n                }\n            }\n        }\n        return bidRows\n    }\n\n    askRowClicked(bucketIndex) {\n        if (this.state.currentlyExpandedAskIndex === bucketIndex) {\n            this.setState({ currentlyExpandedAskIndex: null })\n            return\n        }\n\n        this.setState({ currentlyExpandedAskIndex: bucketIndex })\n    }\n\n    bidRowClicked(bucketIndex) {\n        if (this.state.currentlyExpandedBidIndex === bucketIndex) {\n            this.setState({ currentlyExpandedBidIndex: null })\n            return\n        }\n\n        this.setState({ currentlyExpandedBidIndex: bucketIndex })\n    }\n}\nexport default withStyles(styles)(CryptoComponent);","import EventEmitter from 'events'\n\nfunction coinbaseMessageHandler(message) {\n    const coinbaseData = JSON.parse(message.data)\n    switch (coinbaseData['type']) {\n        case 'subscriptions':\n            break\n        case 'error':\n            break\n        case 'snapshot':\n            this.emit('snapshot', coinbaseData)\n            break\n        case 'l2update':\n            this.emit('l2update', coinbaseData)\n            break\n        default:\n            break\n    }\n}\n\n/**\n * Create the socket connection with coinbase api\n */\nexport default class WebSocketConnectionEmmiter extends EventEmitter {\n    constructor() {\n        super()\n        this.webSocket = new WebSocket('wss://ws-feed.pro.coinbase.com')\n        this.webSocket.addEventListener('open', () => {\n            const subscriptionMessage = JSON.stringify({\n                type: 'subscribe',\n                product_ids: [\n                    'BTC-USD'\n                ],\n                channels: [\n                    'level2',\n                ]\n            })\n            console.log(`connection established`)\n            this.webSocket.send(subscriptionMessage)\n        })\n        this.webSocket.addEventListener('error', () => {\n            console.log(`got error`)\n        })\n        this.webSocket.addEventListener('close', () => {\n            console.log(`got close`)\n\n        })\n        \n        this.webSocket.addEventListener('message', coinbaseMessageHandler.bind(this))        \n    }\n}","import shortid from 'shortid'\n\nexport default class Order {\n  constructor({ priceString, sizeString }) {\n    this.priceString = priceString\n    this.sizeString = sizeString\n    this.price = parseFloat(priceString)\n    this.size = parseFloat(sizeString)\n    this._key = shortid.generate()\n  }\n}","import Order from './Order'\n\nfunction insertSorted({ orderArray, orderToInsert }) {\n  for(let [index, order] of orderArray.entries()) {\n    if(!order) { continue }\n    if(orderToInsert.price > order.price) {\n      orderArray.splice(index, 0, orderToInsert)\n      return\n    }\n  }\n  orderArray.push(orderToInsert)\n}\n\nfunction deleteOrderOfPrice({ orders, priceString }) {\n  const index = orders.findIndex((order) => order && order.priceString === priceString)\n  if(index === -1) { return }\n  orders.splice(index, 1)\n}\n\nexport default class OrderBook {\n  constructor() {\n    this.descendingBids = []\n    this.descendingAsks = []\n  }\n  \n  provideSnapshot({ snapshot }) {\n    this.descendingBids = []\n    this.descendingAsks = []\n    snapshot.bids.forEach((bidTuple) => {\n      const [priceString, sizeString] = bidTuple\n      insertSorted({ orderArray: this.descendingBids, orderToInsert: new Order({ priceString, sizeString }) })\n    })\n    snapshot.asks.forEach((askTuple) => {\n      const [priceString, sizeString] = askTuple\n      insertSorted({ orderArray: this.descendingAsks, orderToInsert: new Order({ priceString, sizeString }) })\n    })\n  }\n\n  provideL2Update({ l2update }) {\n    l2update.changes.forEach((changeTuple) => {\n      const [side, priceString, sizeString] = changeTuple\n      switch(side) {\n        case 'buy':\n          if(sizeString === '0') {\n            deleteOrderOfPrice({ orders: this.descendingBids, priceString })\n            break\n          }\n          insertSorted({ orderArray: this.descendingBids, orderToInsert: new Order({ priceString, sizeString }) })\n          break\n        case 'sell':\n          if(sizeString === '0') {\n            deleteOrderOfPrice({ orders: this.descendingAsks, priceString })\n            break\n          }\n          insertSorted({ orderArray: this.descendingAsks, orderToInsert: new Order({ priceString, sizeString }) })\n          break\n        default:\n          break // log error\n      }\n    })\n  }\n}","import _ from 'lodash'\nimport shortid from 'shortid'\nconst orderBucketSize = 200\n\n/**\n * Generate buckets using coin base data. Create group of 200 records and bunch them together as level2 data\n * @param {*} orders \n */\nfunction generateOrderBuckets({ orders }) {\n  const buckets = []\n  const bucketCount = Math.trunc(orders.length / orderBucketSize) + 1\n  for(let i = 0; i < bucketCount; ++i) { // test\n    const bucketContents = orders.slice(i * orderBucketSize, (i + 1) * orderBucketSize)\n    const price = _.meanBy(bucketContents, order => order.price)\n    const size = _.sumBy(bucketContents, order => order.size)\n    buckets.push({\n      price,\n      size,\n      orders: bucketContents,\n      _key: shortid.generate()\n    })\n  }\n  return buckets\n}\n\n/**\n * helper class to generate ask & bid buckets & to calculate mid point price\n */\nexport default class OrderBookViewModel {\n  constructor({ orderBook }) {\n    this.descendingAskBuckets = generateOrderBuckets({ orders: orderBook.descendingAsks })\n    this.descendingBidBuckets = generateOrderBuckets({ orders: orderBook.descendingBids })\n    if(orderBook.descendingAsks.length > 0 && orderBook.descendingBids.length > 0) {\n      this.midpointPrice = _.mean([orderBook.descendingAsks[orderBook.descendingAsks.length - 1].price, orderBook.descendingBids[0].price])\n    } else {\n      this.midpointPrice = 0\n    }\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport CryptoComponent from './components/CryptoComponent';\nimport CoinbaseOrderBookSubscriber from './utils/WebSocketConnectionEmmiter';\nimport OrderBook from './models/OrderBook';\nimport OrderBookViewModel from \"./models/OrderBookViewModel\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      orderBook: new OrderBook(),\n      orderBookSubscriber: new CoinbaseOrderBookSubscriber()\n    }\n\n    this.state.orderBookSubscriber.on('snapshot', (snapshot) => {\n      this.state.orderBook.provideSnapshot({ snapshot })\n      this.setState({ orderBook: this.state.orderBook })\n    })\n    this.state.orderBookSubscriber.on('l2update', (l2update) => {\n      this.state.orderBook.provideL2Update({ l2update })\n      this.setState({ orderBook: this.state.orderBook })\n    })\n  }\n\n  render() {\n    const orderBookViewModel = new OrderBookViewModel({ orderBook: this.state.orderBook })\n    return (\n      <div className=\"App container\">\n        <CryptoComponent orderBookViewModel={orderBookViewModel} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}